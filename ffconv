#!/bin/bash

## ABOUT
## Generate command for convert any videos to mp4[h264] with ffmpeg and run it
##
## INSTALL
## cp ffconv /usr/local/bin/
## chmod +x /usr/local/bin/ffconv
##
## USAGE
## ffconv                  # Convert FROM current dir TO current dir
## ffconv subdir1 subdir2  # Convert FROM subdir1 TO subdir2
## ffconv 01.avi subdir2   # Convert 01.avi TO subdir2

set -e

video_formats="avi mkv ts mov m2v m4v flv mpg mpeg webm wmv m2ts mts"
audio_formats="mka ac3 mp3 aac"
subtitle_formats="srt ass"

[ "${FFCONV_GPU}"          = yes ] && true
[ "${FFCONV_SOURCE_SUBS}"  = yes ] && true
[ "${FFCONV_SOURCE_AUDIO}" = yes ] && true

[ -z "${1}" ] && source_dir="${PWD}"
[ -d "${1}" ] && source_dir=$(realpath "${1}")

[ -n "${source_dir}" ] && source_videos=$(find "${source_dir}" -type f $(for i in ${video_formats}; do echo -n "-iregex .+\.${i} -o "; done | sed 's/-o $//g'))
[ -f "${1}" ] && source_videos=$(realpath "${1}")

[ -n "${2}" -a ! -e "${2}" ] && mkdir -p "${2}"
[ -n "${2}" ] && out_dir=$(realpath "${2}") || out_dir_ext="null"

[ -z "${source_videos}" ] && (echo "VIDEO FILES NOT FOUND!" && exit 1)

for s_vid in $(echo -e "${source_videos}" | sed 's/ /✖✚/g'); do
  s_vid="$(echo ${s_vid} | sed 's/✖✚/ /g')"
  w_dir=$(echo "${s_vid}" | sed 's/\/[^\/]*$//')
  s_clrpath=$(basename "${s_vid}" | sed 's/\.[^\.]*$//')
  v_info="$(ffprobe -i "${s_vid}" 2>&1)"
  s_vid_color_profile="$(ffprobe -v error -show_streams -select_streams v:0 "${s_vid}" -of json | jq -r '.streams[] | .profile')"
  v_codec_quality_flag="-crf"
  if [ "${FFCONV_GPU}" = yes ]; then
    [ "${s_vid_color_profile}" = "Main 10" -o "${s_vid_color_profile}" = "High 10" ] || v_codec=h264_nvenc
    [ "${v_codec}" = "h264_nvenc" ] && v_codec_quality_flag="-cq:v"
  fi

  for i in ${audio_formats}; do
    [ -f "${w_dir}/${s_clrpath}.${i}" ] && s_aud="${w_dir}/${s_clrpath}.${i}"
  done
  for i in ${subtitle_formats}; do
    [ -f "${w_dir}/${s_clrpath}.${i}" ] && s_sub="${w_dir}/${s_clrpath}.${i}"
  done
  [ -n "${out_dir_ext}" ] && out_dir="${w_dir}"

  out_file="$(echo ${s_clrpath} | sed 's/[^[:alpha:] [:space:] -_]//g;s/_/ /g;s/[[:space:]]\{2,\}/ /g;s/^[[:space:]]//g;s/"//g' | sed "s/'//g")"
  out_file="${out_dir}/${out_file}.mp4"

  [ ! -d "${out_dir}" ] && mkdir -p "$(echo ${out_dir})"

  [ -n "${s_sub}" ] && c_sub="-vf subtitles=\"$(echo ${s_sub} | sed 's/\[/\\[/g;s/\]/\\]/g')\""

  if [ -n "${s_aud}" ]; then
    c_aud="-i \"${s_aud}\""
    c_aud_map="1:0"
  else
    c_aud_map="$(echo -e "${v_info}" | grep rus | awk '/Stream .* Audio/ {print;exit 0}' | sed 's/.* #\([0-9]:[0-9]\{,2\}\)[(:\[].*/\1/g')"
    [ -z "${c_aud_map}" ] && c_aud_map="$(echo -e "${v_info}" | grep default | awk '/Stream .* Audio/ {print;exit 0}' | sed 's/.* #\([0-9]:[0-9]\{,2\}\)[(:\[].*/\1/g')"
    [ -z "${c_aud_map}" ] && c_aud_map="$(echo -e "${v_info}" | awk '/Stream .* Audio/ {print;exit 0}' | sed 's/.* #\([0-9]:[0-9]\{,2\}\)[(:\[].*/\1/g')"
    [ -z "${c_aud_map}" ] && c_aud_map="0:1"
  fi

  if [ "${FFCONV_SOURCE_AUDIO}" = yes ]; then
    c_aud_map_eng="$(echo -e "${v_info}" | grep eng | awk '/Stream .* Audio/ {print;exit 0}' | sed 's/.* #\([0-9]:[0-9]\{,2\}\)[(:\[].*/\1/g')"
    c_aud_map_jpn="$(echo -e "${v_info}" | grep jpn | awk '/Stream .* Audio/ {print;exit 0}' | sed 's/.* #\([0-9]:[0-9]\{,2\}\)[(:\[].*/\1/g')"
    [ -n "${c_aud_map_eng}" ] && c_aud_map_second=${c_aud_map_eng}
    [ -z "${c_aud_map_eng}" -a -n "${c_aud_map_jpn}" ] && c_aud_map_second=${c_aud_map_jpn}
  fi

  c_vid_map="$(echo -e "${v_info}" | grep default | awk '/Stream .* Video/ {print;exit 0}' | sed 's/.* #\([0-9]:[0-9]\{,2\}\)[(:\[].*/\1/g')"
  if [ -z "${c_vid_map}" ]; then
    c_vid_map=$(echo -e "${v_info}" | awk '/Stream .* Video/ {print;exit 0}' | sed 's/.* #\([0-9]:[0-9]\{,2\}\)[(:\[].*/\1/g')
  fi

  command="\nffmpeg -y -i \"${s_vid}\" ${c_aud} -map ${c_vid_map} -map ${c_aud_map} ${c_aud_map_second:+-map }${c_aud_map_second} ${FFCONV_SOURCE_SUBS:+-map 0:s? -c:s copy} ${c_sub} ${v_codec:+-c:v }${v_codec} ${v_codec_quality_flag} 20 -ac 2 -b:a 1500k \"${out_file}\""

  commands+="${command}"
  unset s_clrpath out_file s_sub s_aud s_vid c_aud c_sub v_codec c_aud_map_second command
done

echo -e "${commands}\n\n" | sort
while true; do
  read -p "Continue? [y/n] " cont
  case ${cont,,} in
    y*) break ;;
    n*) exit 0 ;;
    *) ;;
  esac
done

for i in $(echo -e "${commands}" | sed 's/ /✖✚/g' | sort); do
  command="$(echo ${i} | sed 's/✖✚/ /g')"
  echo -e "\n\n\n${command}"
  bash -c "${command}"
done
